From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ryan Volz <ryan.volz@gmail.com>
Date: Mon, 5 Apr 2021 18:35:06 -0400
Subject: [PATCH] grc: Remove global_blocks_path preference and use prefix
 path.

Instead of storing the default (built-in) blocks path in the
preferences, store the path relative to the prefix (GRC_BLOCKS_DIR) in
the Constants.py file and build it at runtime using the installation
prefix. This should make it easier to switch between different versions
by making it so the user preference for global_blocks_path doesn't
interfere. Users still have local_blocks_path preference and the
GRC_BLOCKS_PATH environment variable for pointing to additional blocks.

Signed-off-by: Ryan Volz <ryan.volz@gmail.com>
---
 grc/CMakeLists.txt                         | 17 +++++++++--------
 grc/compiler.py                            |  3 ++-
 grc/core/Config.py                         | 18 ++++++++++++------
 grc/core/{Constants.py => Constants.py.in} |  2 ++
 grc/grc.conf.in                            |  3 +--
 grc/gui/Config.py                          |  3 +--
 grc/gui_qt/Config.py                       |  8 ++++----
 7 files changed, 31 insertions(+), 23 deletions(-)
 rename grc/core/{Constants.py => Constants.py.in} (97%)

diff --git a/grc/CMakeLists.txt b/grc/CMakeLists.txt
index 43d433cf7..b51c9da72 100644
--- a/grc/CMakeLists.txt
+++ b/grc/CMakeLists.txt
@@ -94,14 +94,6 @@ if(ENABLE_GRC)
 ########################################################################
 # Create and install the grc and grc-docs conf file
 ########################################################################
-file(TO_NATIVE_PATH ${CMAKE_INSTALL_PREFIX}/${GRC_BLOCKS_DIR} blocksdir)
-file(TO_NATIVE_PATH ${CMAKE_INSTALL_PREFIX}/${GRC_EXAMPLES_DIR} examplesdir)
-if(CMAKE_INSTALL_PREFIX STREQUAL "/usr")
-    # linux binary installs: append blocks and examples dir with prefix /usr/local
-    set(blocksdir ${blocksdir}:/usr/local/${GRC_BLOCKS_DIR})
-    set(examplesdir ${examplesdir}:/usr/local/${GRC_EXAMPLES_DIR})
-endif(CMAKE_INSTALL_PREFIX STREQUAL "/usr")
-
 if(UNIX)
     find_program(GRC_XTERM_EXE
         NAMES x-terminal-emulator gnome-terminal konsole xfce4-terminal urxvt xterm foot
@@ -135,6 +127,15 @@ install(
     DESTINATION ${GR_PREFSDIR}
 )
 
+########################################################################
+# Configure and install Python files that need variable substitution
+########################################################################
+configure_file(core/Constants.py.in core/Constants.py @ONLY)
+GR_PYTHON_INSTALL(
+    FILES ${CMAKE_CURRENT_BINARY_DIR}/core/Constants.py
+    DESTINATION "${GR_PYTHON_DIR}/gnuradio/grc/core"
+)
+
 ########################################################################
 # Install (+ compile) python sources and data files
 ########################################################################
diff --git a/grc/compiler.py b/grc/compiler.py
index 135e1acd3..28e8d4e8b 100755
--- a/grc/compiler.py
+++ b/grc/compiler.py
@@ -39,7 +39,8 @@ def main(args=None):
         prefs=gr.prefs(),
         version=gr.version(),
         version_parts=(gr.major_version(),
-                       gr.api_version(), gr.minor_version())
+                       gr.api_version(), gr.minor_version()),
+        install_prefix=gr.prefix(),
     )
     platform.build_library()
 
diff --git a/grc/core/Config.py b/grc/core/Config.py
index 1d823d705..2deb0e9ac 100644
--- a/grc/core/Config.py
+++ b/grc/core/Config.py
@@ -6,7 +6,7 @@ SPDX-License-Identifier: GPL-2.0-or-later
 
 
 import os
-from os.path import expanduser, normpath, expandvars, exists
+from os.path import expanduser, expandvars, exists, normpath, join
 from collections import OrderedDict
 
 from . import Constants
@@ -20,9 +20,10 @@ class Config(object):
     hier_block_lib_dir = os.environ.get(
         'GRC_HIER_PATH', Constants.DEFAULT_HIER_BLOCK_LIB_DIR)
 
-    def __init__(self, version, version_parts=None, name=None, prefs=None):
+    def __init__(self, version, install_prefix, version_parts=None, name=None, prefs=None):
         self._gr_prefs = prefs if prefs else DummyPrefs()
         self.version = version
+        self.install_prefix = install_prefix
         self.version_parts = version_parts or version[1:].split(
             '-', 1)[0].split('.')[:3]
         self.enabled_components = self._gr_prefs.get_string(
@@ -32,12 +33,14 @@ class Config(object):
 
     @property
     def block_paths(self):
-        paths_sources = (
+        paths_sources = [
             self.hier_block_lib_dir,
             os.environ.get('GRC_BLOCKS_PATH', ''),
             self._gr_prefs.get_string('grc', 'local_blocks_path', ''),
-            self._gr_prefs.get_string('grc', 'global_blocks_path', ''),
-        )
+            normpath(join(self.install_prefix, Constants.GRC_BLOCKS_DIR)),
+        ]
+        if self.install_prefix == "/usr":
+            paths_sources.append(normpath(join("/usr/local", Constants.GRC_BLOCKS_DIR)))
 
         collected_paths = sum((paths.split(os.pathsep)
                                for paths in paths_sources), [])
@@ -52,7 +55,10 @@ class Config(object):
 
     @property
     def example_paths(self):
-        return [self._gr_prefs.get_string('grc', 'examples_path', '')]
+        return [
+            self._gr_prefs.get_string('grc', 'examples_path', ''),
+            normpath(join(self.install_prefix, Constants.GRC_EXAMPLES_DIR)),
+        ]
 
     @property
     def default_flow_graph(self):
diff --git a/grc/core/Constants.py b/grc/core/Constants.py.in
similarity index 97%
rename from grc/core/Constants.py
rename to grc/core/Constants.py.in
index 1aac44de8..59af1bb24 100644
--- a/grc/core/Constants.py
+++ b/grc/core/Constants.py.in
@@ -21,6 +21,8 @@ BLOCK_DTD = os.path.join(DATA_DIR, 'block.dtd')
 DEFAULT_FLOW_GRAPH = os.path.join(DATA_DIR, 'default_flow_graph.grc')
 DEFAULT_HIER_BLOCK_LIB_DIR = os.path.expanduser('~/.grc_gnuradio')
 DEFAULT_FLOW_GRAPH_ID = 'default'
+GRC_BLOCKS_DIR = os.path.normpath("@GRC_BLOCKS_DIR@")
+GRC_EXAMPLES_DIR = os.path.normpath("@GRC_EXAMPLES_DIR@")
 
 CACHE_FILE = os.path.expanduser('~/.cache/grc_gnuradio/cache_v2.json')
 EXAMPLE_CACHE_FILE = os.path.expanduser('~/.cache/grc_gnuradio/example_cache.json')
diff --git a/grc/grc.conf.in b/grc/grc.conf.in
index 9e5bf426e..f11f8be9b 100644
--- a/grc/grc.conf.in
+++ b/grc/grc.conf.in
@@ -3,9 +3,8 @@
 # ~/.gnuradio/config.conf
 
 [grc]
-global_blocks_path = @blocksdir@
 local_blocks_path =
-examples_path = @examplesdir@
+examples_path =
 default_flow_graph =
 xterm_executable = @GRC_XTERM_EXE@
 canvas_font_size = 8
diff --git a/grc/gui/Config.py b/grc/gui/Config.py
index 5aab9d7b8..51301e79c 100644
--- a/grc/gui/Config.py
+++ b/grc/gui/Config.py
@@ -30,9 +30,8 @@ class Config(CoreConfig):
     gui_prefs_file = os.environ.get(
         'GRC_PREFS_PATH', os.path.expanduser('~/.gnuradio/grc.conf'))
 
-    def __init__(self, install_prefix, *args, **kwargs):
+    def __init__(self, *args, **kwargs):
         CoreConfig.__init__(self, *args, **kwargs)
-        self.install_prefix = install_prefix
         Constants.update_font_size(self.font_size)
 
         self.parser = configparser.ConfigParser()
diff --git a/grc/gui_qt/Config.py b/grc/gui_qt/Config.py
index 28b735773..c953aa8fa 100644
--- a/grc/gui_qt/Config.py
+++ b/grc/gui_qt/Config.py
@@ -1,7 +1,8 @@
 import os
-from os.path import expanduser, normpath, expandvars, exists
+from os.path import expanduser, normpath, expandvars, exists, join
 from collections import OrderedDict
 
+from . import Constants
 from ..core.Config import Config as CoreConfig
 from qtpy import QtCore
 
@@ -13,9 +14,8 @@ class Config(CoreConfig):
     gui_prefs_file = os.environ.get(
         'GRC_QT_PREFS_PATH', os.path.expanduser('~/.gnuradio/grc_qt.conf'))
 
-    def __init__(self, install_prefix, *args, **kwargs):
+    def __init__(self, *args, **kwargs):
         CoreConfig.__init__(self, *args, **kwargs)
-        self.install_prefix = install_prefix
         self.qsettings = QtCore.QSettings(self.gui_prefs_file, QtCore.QSettings.IniFormat)
 
     @property
@@ -28,7 +28,7 @@ class Config(CoreConfig):
             self.hier_block_lib_dir,
             os.environ.get('GRC_BLOCKS_PATH', ''),
             self._gr_prefs.get_string('grc', 'local_blocks_path', ''),
-            self._gr_prefs.get_string('grc', 'global_blocks_path', ''),
+            normpath(join(self.install_prefix, Constants.GRC_BLOCKS_DIR)),
             self.qsettings.value('grc/custom_block_paths', ''),
         )
 
-- 
2.42.0

