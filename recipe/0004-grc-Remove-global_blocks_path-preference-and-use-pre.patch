From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ryan Volz <ryan.volz@gmail.com>
Date: Mon, 5 Apr 2021 18:35:06 -0400
Subject: [PATCH] grc: Remove global_blocks_path preference and use prefix
 path.

Instead of storing the default (built-in) blocks path in the
preferences, store the path relative to the prefix (GRC_BLOCKS_DIR) in
the Constants.py file and build it at runtime using the installation
prefix. This should make it easier to switch between different versions
by making it so the user preference for global_blocks_path doesn't
interfere. Users still have local_blocks_path preference and the
GRC_BLOCKS_PATH environment variable for pointing to additional blocks.

Signed-off-by: Ryan Volz <ryan.volz@gmail.com>
---
 grc/CMakeLists.txt                         | 15 +++++++++------
 grc/compiler.py                            |  3 ++-
 grc/core/Config.py                         | 13 ++++++++-----
 grc/core/{Constants.py => Constants.py.in} |  1 +
 grc/grc.conf.in                            |  1 -
 grc/gui/Config.py                          |  3 +--
 6 files changed, 21 insertions(+), 15 deletions(-)
 rename grc/core/{Constants.py => Constants.py.in} (98%)

diff --git a/grc/CMakeLists.txt b/grc/CMakeLists.txt
index a65c047a4..795828b4a 100644
--- a/grc/CMakeLists.txt
+++ b/grc/CMakeLists.txt
@@ -83,12 +83,6 @@ if(ENABLE_GRC)
 ########################################################################
 # Create and install the grc and grc-docs conf file
 ########################################################################
-file(TO_NATIVE_PATH ${CMAKE_INSTALL_PREFIX}/${GRC_BLOCKS_DIR} blocksdir)
-if(CMAKE_INSTALL_PREFIX STREQUAL "/usr")
-    # linux binary installs: append blocks dir with prefix /usr/local
-    set(blocksdir ${blocksdir}:/usr/local/${GRC_BLOCKS_DIR})
-endif(CMAKE_INSTALL_PREFIX STREQUAL "/usr")
-
 if(UNIX)
     find_program(GRC_XTERM_EXE
         NAMES xterminal-emulator gnome-terminal konsole xterm
@@ -122,6 +116,15 @@ install(
     DESTINATION ${GR_PREFSDIR}
 )
 
+########################################################################
+# Configure and install Python files that need variable substitution
+########################################################################
+configure_file(core/Constants.py.in core/Constants.py @ONLY)
+GR_PYTHON_INSTALL(
+    FILES ${CMAKE_CURRENT_BINARY_DIR}/core/Constants.py
+    DESTINATION "${GR_PYTHON_DIR}/gnuradio/grc/core"
+)
+
 ########################################################################
 # Install (+ compile) python sources and data files
 ########################################################################
diff --git a/grc/compiler.py b/grc/compiler.py
index e0f51e51d..9710c3862 100755
--- a/grc/compiler.py
+++ b/grc/compiler.py
@@ -39,7 +39,8 @@ def main(args=None):
         prefs=gr.prefs(),
         version=gr.version(),
         version_parts=(gr.major_version(),
-                       gr.api_version(), gr.minor_version())
+                       gr.api_version(), gr.minor_version()),
+        install_prefix=gr.prefix(),
     )
     platform.build_library()
 
diff --git a/grc/core/Config.py b/grc/core/Config.py
index 374a3f231..a2bf72573 100644
--- a/grc/core/Config.py
+++ b/grc/core/Config.py
@@ -6,7 +6,7 @@ SPDX-License-Identifier: GPL-2.0-or-later
 
 
 import os
-from os.path import expanduser, normpath, expandvars, exists
+from os.path import expanduser, expandvars, exists, normpath, join
 from collections import OrderedDict
 
 from . import Constants
@@ -20,9 +20,10 @@ class Config(object):
     hier_block_lib_dir = os.environ.get(
         'GRC_HIER_PATH', Constants.DEFAULT_HIER_BLOCK_LIB_DIR)
 
-    def __init__(self, version, version_parts=None, name=None, prefs=None):
+    def __init__(self, version, install_prefix, version_parts=None, name=None, prefs=None):
         self._gr_prefs = prefs if prefs else DummyPrefs()
         self.version = version
+        self.install_prefix = install_prefix
         self.version_parts = version_parts or version[1:].split(
             '-', 1)[0].split('.')[:3]
         self.enabled_components = self._gr_prefs.get_string(
@@ -32,12 +33,14 @@ class Config(object):
 
     @property
     def block_paths(self):
-        paths_sources = (
+        paths_sources = [
             self.hier_block_lib_dir,
             os.environ.get('GRC_BLOCKS_PATH', ''),
             self._gr_prefs.get_string('grc', 'local_blocks_path', ''),
-            self._gr_prefs.get_string('grc', 'global_blocks_path', ''),
-        )
+            normpath(join(self.install_prefix, Constants.GRC_BLOCKS_DIR)),
+        ]
+        if self.install_prefix == "/usr":
+            paths_sources.append(normpath(join("/usr/local", Constants.GRC_BLOCKS_DIR)))
 
         collected_paths = sum((paths.split(os.pathsep)
                                for paths in paths_sources), [])
diff --git a/grc/core/Constants.py b/grc/core/Constants.py.in
similarity index 98%
rename from grc/core/Constants.py
rename to grc/core/Constants.py.in
index 3421d0533..b005d3ac1 100644
--- a/grc/core/Constants.py
+++ b/grc/core/Constants.py.in
@@ -21,6 +21,7 @@ BLOCK_DTD = os.path.join(DATA_DIR, 'block.dtd')
 DEFAULT_FLOW_GRAPH = os.path.join(DATA_DIR, 'default_flow_graph.grc')
 DEFAULT_HIER_BLOCK_LIB_DIR = os.path.expanduser('~/.grc_gnuradio')
 DEFAULT_FLOW_GRAPH_ID = 'default'
+GRC_BLOCKS_DIR = os.path.normpath("@GRC_BLOCKS_DIR@")
 
 CACHE_FILE = os.path.expanduser('~/.cache/grc_gnuradio/cache_v2.json')
 
diff --git a/grc/grc.conf.in b/grc/grc.conf.in
index 1dbb13bfa..ccae5c9e7 100644
--- a/grc/grc.conf.in
+++ b/grc/grc.conf.in
@@ -3,7 +3,6 @@
 # ~/.gnuradio/config.conf
 
 [grc]
-global_blocks_path = @blocksdir@
 local_blocks_path =
 default_flow_graph =
 xterm_executable = @GRC_XTERM_EXE@
diff --git a/grc/gui/Config.py b/grc/gui/Config.py
index 35d2eefcc..a9dfab50f 100644
--- a/grc/gui/Config.py
+++ b/grc/gui/Config.py
@@ -30,9 +30,8 @@ class Config(CoreConfig):
     gui_prefs_file = os.environ.get(
         'GRC_PREFS_PATH', os.path.expanduser('~/.gnuradio/grc.conf'))
 
-    def __init__(self, install_prefix, *args, **kwargs):
+    def __init__(self, *args, **kwargs):
         CoreConfig.__init__(self, *args, **kwargs)
-        self.install_prefix = install_prefix
         Constants.update_font_size(self.font_size)
 
         self.parser = configparser.ConfigParser()
-- 
2.35.0

